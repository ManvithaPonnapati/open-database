from __future__ import print_function123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport os123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport sys123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport re123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport time123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport argparse123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport subprocess123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport multiprocessing123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfrom glob import glob123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfrom functools import partial123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfrom utils import smina_param123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport prody123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport numpy as np123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport pandas as pd123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport config123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfrom database_action import DatabaseAction, db123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfrom db_v2 import AffinityDatabase123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFFLAGS = None123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef get_arguments():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    parser = argparse.ArgumentParser(description='Affinity Database')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    parser.add_argument('--create',dest='db_create', action='store_true')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    parser.add_argument('--continue',dest='db_continue', action='store_true')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    parser.add_argument('--delete',dest='db_delete', action='store_true')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    parser.add_argument('--progress', dest='db_progress', action='store_true')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    parser.add_argument('--action', type=str)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    parser.add_argument('--dock_param', type=str, default='vinardo')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    parser.add_argument('--overlap_param', type=str, default='default')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    parser.add_argument('--native_contact_param', type=str, default='default')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    parser.add_argument('--retry_failed', action='store_true')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    parser.add_argument('--folder_name', type=str)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    parser.add_argument('--table_sn', type=int)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    parser.add_argument('--receptor_sn', type=int)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    parser.add_argument('--ligand_sn', type=int)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    parser.add_argument('--crystal_sn', type=int)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    parser.add_argument('--docked_sn', type=int)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    parser.add_argument('--download_sn', type=int)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    FLAGS, unparsed = parser.parse_known_args()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    return FLAGS123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef run_multiprocess(target_list, func):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        print(len(target_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if len(target_list) == 0:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            return 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if type(target_list[0]).__name__ in ['unicode','str']:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            target_list = list(target_list)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            target_list = map(list, target_list)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        pool = multiprocessing.Pool(config.process_num)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        pool.map_async(func, target_list)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        pool.close()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        pool.join()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        #map(func, target_list)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef get_job_data(func_name, table_sn, table_param, progress=False):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if func_name == 'download':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        download_list = open(config.list_of_PDBs_to_download).readline().strip().split(', ')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        finished_list = db.get_all_success(table_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        failed_list = db.get_all_failed(table_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.retry_failed:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            rest_list = list(set(download_list) - set(finished_list) | set(failed_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            rest_list =list(set(download_list) - set(finished_list) - set(failed_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        total = len(set(download_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        finished = len(set(finished_list)-set(failed_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        failed = len(set(failed_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    elif func_name in ['split_ligand','split_receptor']:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        download_sn = table_param['download_sn']123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        download_list = db.get_all_success(download_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        finished_list = db.get_all_success(table_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        finished_list = map(lambda x:(x[0],),finished_list)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        failed_list = db.get_all_failed(table_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        failed_list = map(lambda x:(x[0],), failed_list)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.retry_failed:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            rest_list = list(set(download_list) - set(finished_list) | set(failed_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            rest_list = list(set(download_list) - set(finished_list) - set(failed_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        total = len(set(download_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        finished = len(set(finished_list)-set(failed_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        failed = len(set(failed_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    elif func_name in ['reorder', 'dock']:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        rec_sn = table_param['receptor_sn']123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        rec_list = db.get_all_success(rec_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        lig_sn = table_param['ligand_sn']123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        lig_list = db.get_all_success(lig_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        finished_list = db.get_all_success(table_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        failed_list = db.get_all_failed(table_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.retry_failed:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            rest_list = list(set(rec_list) & set(lig_list) - set(finished_list) | set(failed_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            rest_lsit = list(set(rec_list) & set(lig_list) - set(finished_list) - set(failed_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        total = len(set(rec_list) & set(lig_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        finished = len(set(finished_list)-set(failed_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        failed = len(set(failed_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    elif func_name in ['rmsd', 'overlap']:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        cry_sn = table_param['crystal_sn']123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        cry_list = db.get_all_success(cry_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        doc_sn = table_param['docked_sn']123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        doc_list = db.get_all_success(doc_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        finished_list = db.get_all_success(table_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        finished_list = map(lambda x: x[:-1], finished_list)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        failed_list = db.get_all_failed(table_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        failed_list = map(lambda x: x[:-1], failed_list)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.retry_failed:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            rest_list = list(set(cry_list) & set(doc_list) - set(finished_list) | set(failed_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            rest_list = list(set(cry_list) & set(doc_list) - set(finished_list) - set(failed_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        total = len(set(cry_list) & set(doc_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        finished = len(set(finished_list)-set(failed_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        failed = len(set(failed_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    elif func_name == 'native_contact':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        rec_sn = table_param['receptor_sn']123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        rec_list = db.get_all_success(rec_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        cry_sn = table_param['crystal_sn']123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        cry_list = db.get_all_success(cry_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        doc_sn = table_param['docked_sn']123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        doc_list = db.get_all_success(doc_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        finished_list = db.get_all_success(table_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        finished_list = map(lambda x: x[:-1], finished_list)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        failed_list = db.get_all_failed(table_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        failed_list = map(lambda x: x[:-1], failed_list)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.retry_failed:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            rest_list = list(set(rec_list) & set(cry_list) & set(doc_list) - set(finished_list) | set(failed_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            rest_list = list(set(rec_list) & set(cry_list) & set(doc_list) - set(finished_list) - set(failed_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        total = len(set(rec_list) & set(cry_list) & set(doc_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        finished = len(set(finished_list)- set(failed_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        failed = len(set(failed_list))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        raise Exception("unknown func_name %s" % func_name)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if progress:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        return (total, finished, failed)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        return rest_list123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef db_create():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if FLAGS.action == 'download':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.folder_name is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            raise Exception("folder_name required")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        folder_name = FLAGS.folder_name123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_param = {123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'func':'download',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'folder': folder_name,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        }123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    elif FLAGS.action == 'split_receptor':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.folder_name is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            raise Exception("folder_name required")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.download_sn is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            raise Exception('download_sn required')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        folder_name = FLAGS.folder_name123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        download_sn = FLAGS.download_sn123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        download_folder = db.get_folder(download_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_param = {123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'func':'split_receptor',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'folder':folder_name,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'download_sn':download_sn,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'download_folder':'{}_{}'.format(download_sn, download_folder),123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'depend':[download_sn]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        }123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    elif FLAGS.action == 'split_ligand':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.folder_name is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            raise Exception("folder_name required")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.download_sn is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            raise Exception('download_sn required')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        folder_name = FLAGS.folder_name123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        download_sn = FLAGS.download_sn123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        download_folder = db.get_folder(download_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_param = {123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'func':'split_ligand',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'folder': folder_name,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'download_sn': download_sn,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'download_folder': '{}_{}'.format(download_sn, download_folder),123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'depend':[download_sn]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        } 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    elif FLAGS.action == 'reorder':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.folder_name is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            raise Exception("folder_name required")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.receptor_sn is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            raise Exception('receptor_sn required')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.ligand_sn is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            raise Exception('ligand_sn required')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        folder_name = FLAGS.folder_name123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        receptor_sn = FLAGS.receptor_sn123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        receptor_folder = db.get_folder(receptor_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        ligand_sn = FLAGS.ligand_sn123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        ligand_folder = db.get_folder(ligand_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_param = {123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'func': 'reorder',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'folder': folder_name,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'receptor_sn':receptor_sn,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'receptor_folder':'{}_{}'.format(receptor_sn,receptor_folder),123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'ligand_sn': ligand_sn,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'ligand_folder': '{}_{}'.format(ligand_sn, ligand_folder),123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'depend':[receptor_sn, ligand_sn],123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'smina_param':config.smina_dock_pm['reorder']123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        }123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    elif FLAGS.action == 'smina_dock':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.folder_name is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            raise Exception("folder_name required")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.receptor_sn is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            raise Exception('receptor_sn required')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.ligand_sn is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            raise Exception('ligand_sn required')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.dock_param is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            raise Exception('dock_param required')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        dock_param = FLAGS.dock_param123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if not dock_param in config.smina_dock_pm.keys():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            raise KeyError("dock param {} doesn't exists. ".format(dock_param)\123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                            + "available options are: {}".format(', '.join(config.smina_dock_pm.keys())))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        dock_param = config.smina_dock_pm[dock_param]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        folder_name = FLAGS.folder_name123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        receptor_sn = FLAGS.receptor_sn123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        receptor_folder = db.get_folder(receptor_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        ligand_sn = FLAGS.ligand_sn 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        ligand_folder = db.get_folder(ligand_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_param = {123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'func': 'smina_dock',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'folder': folder_name,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'receptor_sn':receptor_sn,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'receptor_folder': '{}_{}'.format(receptor_sn, receptor_folder),123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'ligand_sn': ligand_sn,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'ligand_folder': '{}_{}'.format(ligand_sn, ligand_folder),123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'depend':[receptor_sn, ligand_sn],123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'smina_param':dock_param123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        }123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    elif FLAGS.action == 'rmsd':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.crystal_sn is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            raise Exception('crystal_sn required')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.docked_sn is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            raise Exception('docked_sn required')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        crystal_sn = FLAGS.crystal_sn123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        crystal_folder = db.get_folder(crystal_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        docked_sn = FLAGS.docked_sn123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        docked_folder = db.get_folder(docked_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_param = {123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'func':'rmsd',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'crystal_sn': crystal_sn,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'crystal_folder':'{}_{}'.format(crystal_sn, crystal_folder),123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'docked_sn': docked_sn,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'docked_folder':'{}_{}'.format(docked_sn, docked_folder),123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'depend':[crystal_sn, docked_sn]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        }123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    elif FLAGS.action == 'overlap':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.crystal_sn is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            raise Exception('crystal_sn require')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.docked_sn is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            raise Exception('docked_sn required')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        crystal_sn = FLAGS.crystal_sn123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        crystal_folder = db.get_folder(crystal_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        docked_sn = FLAGS.docked_sn123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        docked_folder = db.get_folder(docked_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_param = {123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'func':'overlap',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'crystal_sn': crystal_sn,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'crystal_folder':'{}_{}'.format(crystal_sn, crystal_folder),123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'docked_sn': docked_sn,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'docked_folder':'{}_{}'.format(docked_sn, docked_folder),123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'depend':[crystal_sn, docked_sn],123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'clash_cutoff_A':4.0,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'clash_size_cutoff':0.3123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        }123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    elif FLAGS.action == 'native_contact':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.receptor_sn is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            raise Exception('receptor_sn required')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.crystal_sn is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            raise Exception('crystal_sn require')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if FLAGS.docked_sn is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            raise Exception('docked_sn required')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        receptor_sn = FLAGS.receptor_sn123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        receptor_folder = db.get_folder(receptor_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        crystal_sn = FLAGS.crystal_sn123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        crystal_folder = db.get_folder(crystal_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        docked_sn = FLAGS.docked_sn123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        docked_folder = db.get_folder(docked_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_param = {123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'func':'native_contact',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'receptor_sn': receptor_sn,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'receptor_folder':'{}_{}'.format(receptor_sn, receptor_folder),123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'crystal_sn': crystal_sn,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'crystal_folder':'{}_{}'.format(crystal_sn, crystal_folder),123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'docked_sn': docked_sn,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'docked_folder':'{}_{}'.format(docked_sn, docked_folder),123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'depend': [receptor_sn, crystal_sn, docked_sn],123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            'distance_threshold': 4.0123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        }123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        raise Exception("Doesn't support action {}".format(FLAGS.action))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    func_name = table_param['func']123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    func = DatabaseAction[func_name]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if func_name == 'smina_dock':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_type = 'docked_ligand'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        data_type = 'dock'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    elif func_name == 'reorder':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_type = 'reorder_ligand'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        data_type = 'reorder'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_type = func_name123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        data_type = func_name123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    table_sn = db.create_table(table_type, table_param)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    data = get_job_data(data_type, table_sn, table_param)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    run_multiprocess(data, partial(func, table_sn, table_param))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef db_continue():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if FLAGS.table_sn is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        raise Exception("table_sn required")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    table_sn = FLAGS.table_sn123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    table_name, table_param = db.get_table(table_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    func_name = table_param['func']123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    func = DatabaseAction[func_name]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if func_name == 'smina_dock':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_type = 'docked_ligand'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        data_type = 'dock'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    elif func_name == 'reorder':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_type = 'reorder_ligand'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        data_type = 'reorder'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_type = func_name123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        data_type = func_name123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    data = get_job_data(data_type, table_sn, table_param)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    run_multiprocess(data, partial(func, table_sn, table_param))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef db_delete():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if FLAGS.table_sn is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        raise Exception('table_sn required')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    table_sn = FLAGS.table_sn123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    db.delete_table(table_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef db_progress():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if FLAGS.table_sn is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        raise Exception('table_sn required')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    table_sn = FLAGS.table_sn123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if table_sn:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_sns = [table_sn]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_sns = sorted(db.get_all_sns())123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    print("Progress\n")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if len(table_sns):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        print("Total jobs |  Finished  | Finished(%) |   Failed   |  Failed(%)  |   Remain   |  Remain(%)  | Table name ")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for table_sn in table_sns:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_name, table_param = db.get_table(table_sn)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        func_name = table_param['func']123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        func = DatabaseAction[func_name]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if func_name == 'smina_dock':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            table_type = 'docked_ligand'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            data_type = 'dock'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        elif func_name == 'reorder':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            table_type = 'reorder_ligand'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            data_type='reorder'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            table_type = func_name123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            data_type = func_name123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        total, finished, failed = get_job_data(data_type, table_sn, table_param, progress=True)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        print( "{:<13d} {:<11d} {:<15.2f} {:<11d} {:<14.2f} {:<11d} {:<12.2f} {}". \123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                format(total,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                       finished, 100.*finished/total  if total else 0,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                       failed, 100.*failed/total if total else 0,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                       total - finished - failed, 100.*(total-finished-failed)/total if total else 0,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                       table_name))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef main():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if FLAGS.db_create:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        db_create()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if FLAGS.db_continue:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        db_continue()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if FLAGS.db_delete:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        db_delete()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if FLAGS.db_progress:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        db_progress()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFif __name__ == '__main__':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    FLAGS = get_arguments()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    main()