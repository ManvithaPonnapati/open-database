import numpy as np123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport time123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport re,math123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef read_PDB_bind(pdb_bind_index = "/home/maksym/PyCharmProjects/datasets/pdbbind/INDEX_general_PL.2016"):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    class PDB_bind:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        num_records = 0123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        num_exceptions = 0123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        cant_split_lines = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        cant_split_affinity_and_moilarity = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        pdb_names = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        ligand_names = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        binding_affinities = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        log_affinities = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        normalized_affinities = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        exceptions = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    with open(pdb_bind_index) as f:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        [f.readline() for _ in range(6)]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        file_text = f.readlines()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for line in file_text:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        try:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            # sanity check123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if re.compile(".*incomplete ligand.*").match(line):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                raise Exception('missing atoms in ligand')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if re.compile(".*covalent complex.*").match(line):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                raise Exception('forms covalent complex')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if re.compile(".*Nonstandard assay.*").match(line):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                raise Exception('not standard assay')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            pdb_name = re.split("[\s]+", line)[0]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if not re.compile("^[a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9]$").match(pdb_name):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                raise Exception('PDB name in the record is impossible')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            ligand_name = re.split("[\s]+", line)[6]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if not re.compile("\([a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9]\)").match(ligand_name):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                if not re.compile("\([a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9]-[a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9]\)").match(ligand_name):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                    raise Exception('ligand name is impossible')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            affinity_record = re.split("[\s]+", line)[3]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            # split the lines of the PDB bind file record123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            molar_affinity_record = re.sub(re.compile('(IC50=|Ki=|Kd=|IC50~|Ki~|Kd~)'), "", affinity_record)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            affinity_number_and_molarity = re.split(re.compile("([0-9]+\.[0-9]+|[0-9]+)"), molar_affinity_record)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if len(affinity_number_and_molarity) != 3:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                raise Exception('can not split record'), len(affinity_number_and_molarity)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            affinity_number = affinity_number_and_molarity[1]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if not re.compile("[0-9]").match(affinity_number):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                raise Exception('can not split record')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            molarity = affinity_number_and_molarity[2]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if not re.compile("(fM|pM|nM|uM|mM)").match(molarity):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                raise Exception('can not split record')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            # convert affinities into normalized affinities123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            # fm = -15; pm = -12, nm = -9; uM = -6; mM = -3;123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            PDB_bind.pdb_names.append(pdb_name)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            PDB_bind.ligand_names.append(ligand_name.strip("(").strip(")"))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if re.compile("fm|fM|Fm").match(molarity):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                log_affinity = np.log(float(affinity_number)) - np.log(10.0 ** 15)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            elif re.compile("pm|Pm|pM").match(molarity):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                log_affinity = np.log(float(affinity_number)) - np.log(10.0 ** 12)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            elif re.compile("nm|Nm|nM").match(molarity):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                log_affinity = np.log(float(affinity_number)) - np.log(10.0 ** 9)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            elif re.compile("um|uM|Um"):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                log_affinity = np.log(float(affinity_number)) - np.log(10.0 ** 6)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            elif re.compile("mM|Mm|mm"):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                log_affinity = np.log(float(affinity_number)) - np.log(10.0 ** 3)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            PDB_bind.log_affinities.append(log_affinity)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        except Exception as e:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            PDB_bind.num_exceptions += 1123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            PDB_bind.exceptions.append(e)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        PDB_bind.num_records += 1123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    max_log_affinity = np.log(10.**0)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    min_log_affinity = np.log(10.**-18)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    PDB_bind.normalized_affinities = (PDB_bind.log_affinities - min_log_affinity) / (max_log_affinity - min_log_affinity)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    print "parsing finished. num records:",PDB_bind.num_records,"num exceptions:",PDB_bind.num_exceptions123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    return PDB_bind123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFif __name__ == '__main__':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    PDB_bind = read_PDB_bind()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for i in range(len(PDB_bind.pdb_names)):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        print PDB_bind.pdb_names[i],PDB_bind.ligand_names[i],PDB_bind.normalized_affinities[i]