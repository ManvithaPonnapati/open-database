import os123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport sys123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport config123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFmkdir = lambda path: os.system('mkdir -p {}'.format(path))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef log(log_file, log_content, head=None, lock=None):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    """123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    write down log information123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :param log_file: name of log file123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :param log_content: string or list of string, log content123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :param head: head for csv or tsv output file123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :param lock: multiprocess lock123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :return:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    """123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    lock.acquire()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if isinstance(log_content, str):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        log_content = [log_content]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    mkdir(config.log_folder)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    log_file_path = os.path.join(config.log_folder, log_file)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if not os.path.exists(log_file_path) and not head is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        with open(log_file_path, 'w') as fout:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            fout.write(head+'\n')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    with open(log_file_path, 'a') as fout:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        for cont in log_content:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if type(cont).__name__ == 'list':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                print cont123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            fout.write(cont+'\n')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    lock.release()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFclass smina_param:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    kw_options = [123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'receptor',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'ligand',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'out',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'flex',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'flexres',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'flexdist_ligand',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'flexdist',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'center_x',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'center_y',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'center_z',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'size_x',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'size_y',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'size_z',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'autobox_ligand',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'autobox_add',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'scoring',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'custom_scoring',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'minimize_iters',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'approximation',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'factor',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'force_cap',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'user_grid',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'user_grid_lambda',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'out_flex',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'log',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'atom_terms',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'cpu',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'seed',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'exhaustiveness',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'num_modes',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'energy_range',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'min_rmsd_filter',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'addH',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'config'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    arg_options = [123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'no_lig',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'score_only',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'local_only',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'minimize',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'randomize_only',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'accurate_line',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'print_terms',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'print_atom_types',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'atom_term_data',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'quiet',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'flex_hydrogen',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'help',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'help_hidden',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        'version'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    def __init__(self):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        pass123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    def set_smina(self, smina):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        self.smina = smina123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    def set_name(self, name):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        self.name = name123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    def load_param(self, *arg, **kw):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        self.args = arg123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        self.kwargs = kw123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    def make_command(self, *arg, **kw):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        cmd = self.smina123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        for a in self.arg_options:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if arg and a in arg:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                cmd += ' --'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                cmd += a123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            elif a in self.args:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                cmd += ' --'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                cmd += a123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        for key in self.kw_options:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if kw and key in kw.keys():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                cmd += ' --'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                cmd += key123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                cmd += ' '123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                cmd += str(kw[key])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            elif key in self.kwargs.keys():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                cmd += ' --'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                cmd += key123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                cmd += ' '123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                cmd += str(self.kwargs[key])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        return cmd123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    