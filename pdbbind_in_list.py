import math123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef get_pdbdata(path_to_text, protein_name = [],binding_energy = []):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    #path_to_textfile = ~/common/data/general-set-except-refined/index/INDEX_core_data.2016123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    with open(path_to_text) as f:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        protein_list = f.readlines()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        for protein in protein_list:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            try:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                unit = protein[protein.index("M")-1:protein.index("M")+1]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                if unit == "mM": # 1mM = 1e+9nm123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                    binding_energy.append(float(protein[protein.index("=")+1:protein.index("M")-1]) * 1000000000) 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                elif unit == "uM": # 1uM = 1000000pm123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                    binding_energy.append(float(protein[protein.index("=")+1:protein.index("M")-1]) * 1000000)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                elif unit == "nM": # 1nM = 1000pm123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                    binding_energy.append(float(protein[protein.index("=")+1:protein.index("M")-1]) * 1000)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                elif unit == "pM": # 1pM = 0.001nm123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                    binding_energy.append(float(protein[protein.index("=")+1:protein.index("M")-1]))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                    raise ValueError123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                protein_name.append(protein[:4])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            except:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                break123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        return protein_name,binding_energy123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef get_protein_name():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    return get_pdbdata()[0]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef get_binding_energy(protein_energy = get_pdbdata()[1]):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    log_energy = [1]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    max_energy = math.log(protein_energy[0])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for data in protein_energy[1:]:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        log_energy.append(math.log(data)/max_energy)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    return log_energy123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF#path_to_textfile = ~/common/data/general-set-except-refined/index/INDEX_core_data.2016123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF#database_path = ~/christine/data/pdbbind_av4123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef convert_database_to_av4(database_path, pdb_folder):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    """Goes through the list with protein names and protein energy 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    and converts it to av4 """123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    #make a directory where the av4 form of the output will be written123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    output_path = "~/christine/data/pdbbind_av4"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if not os.path.exists(output_path):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        os.makedirs(output_path)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    def save_av4(filepath,labels,elements):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        labels = np.asarray(labels,dtype=np.int32)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        elements = np.asarray(elements,dtype=np.int32)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        number_of_examples = np.array([len(labels)], dtype=np.int32)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        av4_record = number_of_examples.tobytes()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        av4_record += labels.tobytes()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        av4_record += elements.tobytes()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        f = open(filepath + ".av4", 'w')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        f.write(av4_record)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        f.close()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    path_to_text = "~/common/data/general-set-except-refined/index/INDEX_core_data.2016"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    protein_name, protein_energy = get_pdbdata(path_to_text, protein_name = [],binding_energy = []):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    pdbbind_energy = [1]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    max_energy = math.log(protein_energy[0])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for data in protein_energy[1:]:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        pdbbind_energy.append(math.log(data)/max_energy)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for i in range(len(protein_name)):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        #pdbbind_energy, protein_name123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        pdb_output_file = output_path + "/" + protein_name[i] + ".av4"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if os.path.exists(pdb_output_file):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            continue123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if not os.path.exists(pdb_output_file):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            os.makedirs(path_to_pdb_subfolder)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                # convert atomnames to tags and write the data to disk123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                def atom_to_number(atomname):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                    atomic_tag_number = atom_dictionary.ATM[atomname.lower()]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                    return atomic_tag_number123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                receptor_elements = map(atom_to_number,prody_receptor.getElements())123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                ligand_elements = map(atom_to_number,prody_positive.getElements())123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                receptor_output_path = path_to_pdb_subfolder + "/" +str(os.path.abspath(dirpath)).split("/")[-1]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                save_av4(receptor_output_path,[0],receptor_elements,prody_receptor.getCoords())123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                ligand_output_path = path_to_pdb_subfolder + "/" + path_to_positive.split("/")[-1].split(".")[0]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                save_av4(ligand_output_path,labels,ligand_elements,multiframe_ligand_coords)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF