import os,sys123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport prody123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport getopt123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport numpy as np123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport multiprocessing123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfrom glob import glob123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport config123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfrom utils import log,mkdir123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF'''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFload PDB download from RCSB123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFsplit it into receptor and hetero123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFif hetero's heavy atom more than threshold123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFsave the receptor and hetero ligand123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF'''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef split_structure(pdb_path):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    pdb_name = os.path.basename(pdb_path).split('.')[0].lower()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    try:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        parsed = prody.parsePDB(pdb_path)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    except Exception as e:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        log('parse_failed.log','{},{}\n'.format(pdb_name,str(e)))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        return123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    hetero = parsed.select(123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        '(hetero and not water) or resname ATP or resname ADP or sesname AMP or resname GTP or resname GDP or resname GMP')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    receptor = parsed.select('protein or nucleic')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if receptor is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        log("select_failed.log","{},doesn't have receptor.\n".format(pdb_name))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        return123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if hetero is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        log("select_failed.log","{},doesn't have ligand.\n".format(pdb_name))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        return123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    # write ligand into file123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ligand_flags = False123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for each in prody.HierView(hetero).iterResidues():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if each.select('not hydrogen').numAtoms() < config.heavy_atom_threshold:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            continue123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            ligand_flags = True123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            ResId = each.getResindex()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            ligand_path = os.path.join(config.splited_ligand_folder, pdb_name, "{}_{}_ligand.pdb".format(pdb_name, ResId))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            mkdir(os.path.dirname(ligand_path))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            prody.writePDB(ligand_path, each)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    # if have valid ligand, write down receptor123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if ligand_flags:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        receptor_path = os.path.join(config.splited_receptor_folder, pdb_name + '.pdb')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        prody.writePDB(receptor_path, receptor)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        log('success_ligand')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        log("threshold_failed.log","{}, no ligand above threshold {}.\n".format(pdb_name,config.heavy_atom_threshold))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef split():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    pdb_list = glob(config.pdb_download_path)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    pool = multiprocessing.Pool(config.process_num)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    pool.map_async(split_structure,pdb_list)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    pool.join()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    pool.close()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    #map(split_structure,pdb_list)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF