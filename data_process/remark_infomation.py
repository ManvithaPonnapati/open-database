import numpy as np123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport pandas as pd123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport re123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport os, sys123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF'''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFThis is to used formalize the remark in experience data and docking result.123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF'''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef get_id(filename):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    extract the ID of a file123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :param filename: eg '1a2b_1234.pdb'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :return: eg '1a2b_1234'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ID = '_'.join(filename.split('_')[0:2])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    return ID123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef standarlize_exp(data):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    only first two columns is strng, and the rest are float,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    and some of the rest would have multiple value, should split them123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    it's hard to convert with operator like gt or lt so we discard them at this time123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :param data: list of the remark123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :return: standarlized data123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    result = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for i in range(len(data)):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if i < 2 or i == 9:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            # they're string so keep it as original123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            result.append(data[i])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        elif data[i] == '':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            # Nothing here123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            result.append(None)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            m = re.match('\[(.*)\]', data[i])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if m:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                # it was a list123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                nums = m.group(1)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                nums = nums.split(',')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                nums = [float(n) for n in nums]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                result.append(nums)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                print i123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                print data[i]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                nums = data[i].split('|')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                nums = [float(num) for num in nums if not re.search('>|<|NA', num)]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                result.append(nums)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    return result123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef standarlize_dock(data):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    result = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for i in range(len(data)):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if i == 0:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            result.append(data[i])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        elif i == 1:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            result.append(data[i])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            result.append(int(data[i].split('_')[1]))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        elif data[i] == 'NA':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            result.append('')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            m = re.match('\[(.*)\]', data[i])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if m:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                # it was a list123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                nums = m.group(1)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                nums = nums.split(',')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                nums = [float(n) for n in nums]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                result.append(nums)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                result.append(float(data[i]))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    return result123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef read_single_path(input_path):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for dirname, dirnames, filenames in os.walk(input_path):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        for filename in filenames:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            file_path = os.path.join(dirname, filename)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            return file_path123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef read_file_path(input_path):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    Get the path of file used as input of count function123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :param input_path: path of data123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :return: generator every time return one path of file123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for dirname, dirnames, filenames in os.walk(input_path):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        for filename in filenames:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            file_path = os.path.join(dirname, filename)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            yield file_path123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef get_remark_columns(file_path):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    extract the remark from experimental123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :param file_path: file path123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :return: columns, list123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    name = os.path.basename(file_path)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    brand = '_'.join(name.split('_')[0:2])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    with open(file_path) as fr:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        remark = fr.readline()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if not re.search('^# Remark', remark):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        columns = None123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        remark = remark.split('*@*')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        remark = [r.split(':') for r in remark[1:]]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        columns = [r[0] for r in remark]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        columns.insert(0, 'ID')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    return columns123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef get_remark_data(file_path):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    extract the remark from experimental123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :param file_path: file path123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :return:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    name = os.path.basename(file_path)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    brand = '_'.join(name.split('_')[0:2])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    with open(file_path) as fr:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        remark = fr.readline()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if not re.search('^# Remark.', remark):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        data = None123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        remark = remark.split('*@*')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        remark = [r.split(':') for r in remark[1:]]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        columns = [r[0] for r in remark]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        columns.insert(0, 'ID')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        data = [r[1] for r in remark]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        data = standarlize_exp(data)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        data.insert(0, brand)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    return data123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef get_dock_remark_columns(file_path):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    name = os.path.basename(file_path)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    brand = '_'.join(name.split('_')[0:2])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    remark = None123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    with open(file_path) as fr:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        for line in fr:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if re.search('^# Remark', line):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                remark = line.strip('\n')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if remark:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        remark = remark.split('{')[1:]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        remark = [r.strip('}_') for r in remark]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        remark = [r.split(':') for r in remark]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        columns = [r[0] for r in remark]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        columns.insert(0, 'ID')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        columns.insert(3, 'inner_index')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    return columns123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef get_remarks_exp():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    extract remark from exp data123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :return:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    input_path = '/n/scratch2/yw174/result/experiment'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    output_file_path = '/n/scratch2/xl198/data/remark/exp.csv'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    columns = get_remark_columns(read_single_path(input_path))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    walk = read_file_path(input_path)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    data = [get_remark_data(file_path) for file_path in walk]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    df = pd.DataFrame(data=data, columns=columns)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    df.to_csv(output_file_path, index=False)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef get_dock_remark_data(file_path):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        extract the remark from experimental123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        :param file_path: file path123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        :return:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    name = os.path.basename(file_path)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    brand = '_'.join(name.split('_')[0:2])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    remarks = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    with open(file_path) as fr:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        for line in fr:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if re.search('^# Remark.', line):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                remarks.append(line.strip('\n'))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    data = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for remark in remarks:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        remark = remark.split('{')[1:]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        remark = [r.strip('}_') for r in remark]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        remark = [r.split(':') for r in remark]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        datum = [r[1] for r in remark]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        result = standarlize_dock(datum)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        result.insert(0, brand)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        data.append(result)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    return data123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef get_remarks_dock():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    extract remark from dock result123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :return:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    input_path = '/n/scratch2/yw174/result/fast'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    output_file_path = '/n/scratch2/xl198/data/remark/fast.csv'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    columns = get_dock_remark_columns(read_single_path(input_path))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    walk = read_file_path(input_path)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    raw_data = [get_dock_remark_data(file_path) for file_path in walk]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    data = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for raw in raw_data:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        for r in raw:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            data.append(r)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    df = pd.DataFrame(data=data, columns=columns)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    df.to_csv(output_file_path, index=False)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef main():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    get_remarks_dock()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFif __name__ == '__main__':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    main()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF