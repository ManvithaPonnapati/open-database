import config123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport re123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport os, sys123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport numpy as np123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport pandas as pd123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF'''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFCounte the number of ligands in a file123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFCounte the number of the atoms in a ligand123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF'''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef count_liangd_num(input_file):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    count the number of ligands for given ligands in mol2 foramt.123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :param input_file: path of input file eg. '/n/scratch2/xl198/data/source/ligands/1a2b/1a2b_1234_liagnd.mol2'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :return:  [filename,atom_num] eg [1a2b_1234_liagnd,10]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    # count the number of the single ligand in one file123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ligand_count = 0123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    with open(input_file) as input:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        for line in input:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if line == '@<TRIPOS>MOLECULE\n':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                ligand_count += 1123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    return [os.path.basename(input_file), ligand_count]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef count_atom_num(input_file):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    count the number of atoms for given ligand in mol2 foramt.123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :param input_file: path of input file eg. '/n/scratch2/xl198/data/source/ligands/1a2b/1a2b_1234_liagnd.mol2'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :return: [ID,atom_num] eg [1a2b_1234,10]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    # count the number of the atoms in ligand123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    flag = False123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    atom_num = 0123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    with open(input_file) as input:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        for line in input:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if not flag and line == '@<TRIPOS>ATOM\n':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                flag = True123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            elif line == '@<TRIPOS>BOND\n':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                break123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            elif flag:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                atom_num += 1123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    name = os.path.basename(input_file)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ID = '_'.join(name.split('_')[:2])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    return [ID, atom_num]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef read_file_path(input_path):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    Get the path of file used as input of count function123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :param input_path:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :return:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for dirname, dirnames, filenames in os.walk(input_path):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        for filename in filenames:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            file_path = os.path.join(dirname, filename)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            yield file_path123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef count_and_report(input_path, report, counter):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    pathes = read_file_path(input_path)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    result = [counter(path) for path in pathes]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    df = pd.DataFrame(data=result, columns=['file', 'atom_num'])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    df.to_csv(report, index=False)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef main():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    count_and_report(config.BASE_YI,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                     os.path.join(config.REPORT, 'atom_count.csv'),123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                     count_atom_num)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFif __name__ == '__main__':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    main()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF