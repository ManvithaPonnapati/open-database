import sys,time123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport tensorflow as tf123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFsys.path.append('../')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfrom av4_utils import geom_utils123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport nn_ops123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFsess = tf.Session()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFpixel_size = tf.constant(0.1,tf.float32)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfilter_size = tf.constant([2,2,2],tf.float32)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFtest_srcpnt_coords = tf.Variable(tf.random_uniform([1100,3],minval=1,maxval=40,dtype=tf.float32))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFtest_destpnt_coords = tf.Variable(tf.random_uniform([900,3],minval=1,maxval=40,dtype=tf.float32))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFtest_srcpnt_features = tf.Variable(tf.random_uniform([1100,3],minval=1,maxval=100,dtype=tf.float32))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFtest_destpnt_features = tf.Variable(tf.random_uniform([900,2],minval=1,maxval=100,dtype=tf.float32))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFss_pairs, ss_rel_coords = geom_utils.pointcloud_pairlist(test_srcpnt_coords,test_srcpnt_coords,cutoffs_xyz=filter_size,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                         order='NAME',keep_null_src=True)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFsd_pairs, sd_rel_coords = geom_utils.pointcloud_pairlist(test_srcpnt_coords,test_destpnt_coords,cutoffs_xyz=filter_size,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                         order='NAME',keep_null_src=True)                               # some of the source and destination points may be missing123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                                        # return "None" for the source points that are empty123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                                        # return None for the destination points that are empty123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdd_pairs, dd_rel_coords = geom_utils.pointcloud_pairlist(test_destpnt_coords,test_destpnt_coords,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                         cutoffs_xyz=filter_size, order='NAME',keep_null_src=True)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFds_pairs, ds_rel_coords = geom_utils.pointcloud_pairlist(test_destpnt_coords,test_srcpnt_coords,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                         cutoffs_xyz=filter_size, order='NAME',keep_null_src=True)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF# ds_pairs = tf.concat([tf.expand_dims(sd_pairs[:,1],1),tf.expand_dims(sd_pairs[:,0],1)],1)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF# ds_rel_coords = -sd_rel_coords123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF# ds_order = tf.nn.top_k(-sd_pairs[:,1],k=tf.shape(sd_pairs)[0]).indices123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF# ds_pairs = tf.gather(ds_pairs,ds_order)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF# ds_rel_coords = tf.gather(ds_rel_coords,ds_order)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFss_kernel = tf.ones([11,11,11,6,20])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFsd_kernel = tf.ones([11,11,11,5,20])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFds_kernel = tf.ones([11,11,11,5,10])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdd_kernel = tf.ones([11,11,11,4,10])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFanswer = nn_ops.concat_nonlinear_conv3d(ss_pairs=ss_pairs, sd_pairs=sd_pairs, dd_pairs=dd_pairs, ds_pairs=ds_pairs,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                        ss_rel_coords=ss_rel_coords,sd_rel_coords=sd_rel_coords,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                        dd_rel_coords=dd_rel_coords,ds_rel_coords=ds_rel_coords,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                        s_features=test_srcpnt_features, d_features=test_destpnt_features,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                        ss_kernel=ss_kernel, sd_kernel=sd_kernel, ds_kernel=ds_kernel,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                        dd_kernel=dd_kernel, pixel_size=1)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFrun4 = [tf.shape(ss_rel_coords),tf.shape(sd_rel_coords),tf.shape(dd_rel_coords),tf.shape(ds_rel_coords)] # says nothing about if all points are there123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFrun5 = ss_pairs[:,1][-1]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFcoord = tf.train.Coordinator()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFinit_op = tf.global_variables_initializer()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFtf.get_default_graph().finalize()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFsess.run(init_op)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFthreads = tf.train.start_queue_runners(sess,coord)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFwhile True:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    start = time.time()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    #sess.run([ss_rel_coords,sd_rel_coords,dd_rel_coords,ds_rel_coords]) # 130exps/thread123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    print sess.run(answer) # 30exps/1thread with no load123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    #print sess.run(run4)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    #print sess.run(run5)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    print "exps:", "%.3f" % (1/(time.time()-start))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF