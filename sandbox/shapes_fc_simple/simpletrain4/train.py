import base64123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfrom datetime import datetime123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport tensorflow as tf123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfrom simpletrain4 import st4123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfrom utils import *123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef train():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    # Make logging very verbose123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    tf.logging.set_verbosity(tf.logging.DEBUG)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    notify("simpletrain4 is now running!", subject="Running!")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    # Create session123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    sess = tf.Session()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    # Start coordinator and queue runners123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    coord = tf.train.Coordinator()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    threads = tf.train.start_queue_runners(coord=coord, sess=sess)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    with tf.Graph().as_default():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        global_step = tf.contrib.framework.get_or_create_global_step()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        print("At train step")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        # Say hi to Maksym123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if get_username() == 'maksym':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            m = "6Ojo"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            print(base64.b64decode('Ojo6ICAgIDo6OiA' + m + '' + m + '' + m + '6OiAgICAgIDo' + m + 'gICAgOjo6OiAgICAgIDo'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                  '6OiAg'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                  'ICAgOjo6ICAgIDo'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                  '6OiA'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                   + m + '' + m + '6OiAgOjo6ICAgOjo6IDo' + m + 'gICAgOjo6OiAgOjo6IA==') + "\n:+:    :+:"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          "    "123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          " :+:        "123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          "  +:+:+: :+:"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          "+:+   :+: :+"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          ":   "123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          ":+:   :+: :+"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          ":    :+: :+:"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          "   :"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          "+: +:+:+: :+"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          ":+:+ :+: \n+"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          ":+  "123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          "  +:+     +:"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          "+          +"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          ":+ +"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          ":+:+ +:+  +:"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          "+   +:+  +:+"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          "  +:"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          "+  +:+      "123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          "   +:+ +:+  "123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          "+:+ "123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          "+:+:+ +:+ +:"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                                                          "+ \n" +123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                  base64.123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                  b64decode(123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                      'KyMrKzorKyMrKyAgICAgKyMrICAgICAgICAgICsjKyAgKzorICArIysgKyMrKzorKyMrKzogKyMrKzorKyAgICsjKys6Ky'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                      'sjKysgICArIysrOiAgICsjKyAgKzorICArIysgKyMrIA==') + "\n+#+    +#+     +#+          +#+       +#"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                          "+ +#+     +#+ +#+  +#+         +#+    +#+ "123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                          "   +#+       +#+ +#+ \n#+#    #+#     #+# "123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                          "         #+#       #+# #+#     #+# #+#   #"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                          "+# #+#    #+#    #+#    #+#       #+#     "123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                          "\n###    ### ###########      ###       ##"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                          "# ###     ### ###    ### ########     ### "123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                                                          "   ###       ### ### ")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        # Get images and labels for MSHAPES123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        images, labels = st4.inputs(eval_data=False)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        # Build a Graph that computes the logits predictions from the123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        # inference model.123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        logits = st4.inference(images)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        # Calculate loss.123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        loss = st4.loss(logits, labels)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        # Build a Graph that trains the model with one batch of examples and123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        # updates the model parameters.123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        train_op = st4.train(loss, global_step)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        for _ in range(0, 1000):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            sess.run(train_op)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef main(argv=None):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    print("Hello, world!")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    notify("Hello, world!", subject="Hi!!!")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    missing_dependencies = check_dependencies_installed()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if len(missing_dependencies) > 0:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        raise Exception("Not all dependencies are installed! (Missing packages " + ' and '.join(missing_dependencies) +123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                        "). See README.md for details.")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    # Download and extract the dataset if it's missing123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    maybe_download_and_extract()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    # Run some checks on the dataset to make sure it's correct123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    verify_dataset()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    # Clean up directories123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if tf.gfile.Exists(FLAGS.train_dir):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        tf.gfile.DeleteRecursively(FLAGS.train_dir)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    tf.gfile.MakeDirs(FLAGS.train_dir)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    # Train the network!!123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    train()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFif __name__ == '__main__':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    tf.app.run()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF