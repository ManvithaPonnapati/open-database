from __future__ import print_function123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport os123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport socket123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport urllib123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfrom glob import glob123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfrom time import strftime, gmtime123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport pwd123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport requests123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfrom constants import CONSTANTS123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFclass bcolors:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    HEADER = '\033[95m'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    OKBLUE = '\033[94m'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    OKGREEN = '\033[92m'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    WARNING = '\033[93m'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    FAIL = '\033[91m'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ENDC = '\033[0m'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    BOLD = '\033[1m'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    UNDERLINE = '\033[4m'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    MAJORINFO = '\033[93m'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef info(message, source=""):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if CONSTANTS.print_info:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if source != "":123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            print(bcolors.OKBLUE + "[" + source + "]: " + message + "" + bcolors.ENDC)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            print(bcolors.OKBLUE + "" + message + "" + bcolors.ENDC)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef printi(message):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    print(bcolors.MAJORINFO + "" + message + "" + bcolors.ENDC)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef header(message):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    print(bcolors.HEADER + "" + message + "" + bcolors.ENDC)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef ok(message):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    print(bcolors.OKGREEN + "" + message + "" + bcolors.ENDC)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef warning(message):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    print(bcolors.WARNING + "" + message + "" + bcolors.ENDC)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef majorwarning(message):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    print(bcolors.FAIL + "" + "" + message + "" + bcolors.ENDC)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef error(message):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    print(bcolors.FAIL + "" + message + "" + bcolors.ENDC)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef check_dataset(data_dir):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if len(glob(os.path.join(data_dir + '/**/', "*[_]*.av4"))) == 0:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        raise Exception("Dataset appears to be empty (looking in " + data_dir + ")")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef rightzpad(string, length):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    return (str(string)[::-1]).zfill(length)[::-1]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef notify(message, subject="Notification", email=CONSTANTS.notification_email):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    """123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    Send an email with the specified message.123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :param message: the message to be sent123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :param subject: (optional) the subject of the message123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :param email: (optional) the email to send the message to. Defaults to FLAGS.NOTIFICATION_EMAIL123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :return: The response of the server. Should be "Thanks!"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    """123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    params = {'message': "[" + get_username() + "@" + get_hostname() + ", " + get_time_string() + "]: " + message,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              'subject': subject, 'email': email}123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    encoded_params = urllib.urlencode(params)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    response = "Emailing blocked by configuration (See constants.py)"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if CONSTANTS.email_info:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        response = requests.get('https://electronneutrino.com/affinity/notify/notify.php?' + encoded_params)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        # print (response.status_code)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        # print (response.content)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    return response123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef get_time_string():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    """123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    Returns the GMT.123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :return: a formatted string containing the GMT.123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    """123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    return strftime("%Y-%m-%d %H:%M:%S", gmtime()) + " GMT"123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef get_username():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    """123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    Gets the username of the current user.123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :return: a string with the username123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    """123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    return pwd.getpwuid(os.getuid()).pw_name123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef get_hostname():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    """123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    Returns the hostname of the computer.123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    :return: a string containing the hostname123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    """123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    return socket.gethostname()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef notify_constants():123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    info("Num epochs      : " + str(CONSTANTS.num_training_epochs), source="Config info")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    info("Batch size      : " + str(CONSTANTS.batch_size), source="Config info")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    # info("Radial filters  : " + str(CONSTANTS.radial_filters), source="Config info")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    # info("Learning rate   : " + str(CONSTANTS.learning_rate), source="Config info")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    # info("Hidden units    : " + str(CONSTANTS.hidden_units), source="Config info")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    # info("Conv layers     : " + str(CONSTANTS.conv_layers), source="Config info")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    # info("FC layers       : " + str(CONSTANTS.fc_layers), source="Config info")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    info("Keep probability: " + str(CONSTANTS.keep_probability), source="Config info")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    info("Num threads     : " + str(CONSTANTS.num_threads), source="Config info")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    info("DB path         : " + str(CONSTANTS.database_path), source="Config info")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    info("Summaries dir   : " + str(CONSTANTS.summaries_dir), source="Config info")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    info("Saved session   : " + str(CONSTANTS.saved_session), source="Config info")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    info("Pixel size      : " + str(CONSTANTS.pixel_size), source="Config info")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    info("Side pixels     : " + str(CONSTANTS.side_pixels), source="Config info")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    info("Nickname        : " + str(CONSTANTS.nickname), source="Config info")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    info("Email           : " + str(CONSTANTS.notification_email), source="Config info")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    info("Email?          : " + str(CONSTANTS.email_info), source="Config info")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF