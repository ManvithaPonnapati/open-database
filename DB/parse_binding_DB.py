import numpy as np123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport time123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport re,math123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport csv123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfrom collections import Counter123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef read_binding_moad(binding_moad_index):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    class PDB_moad:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        num_records = 0123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        num_exception = 0123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        pdb_names = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        ligand_names = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        binding_affinityes = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        log_affinities = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        normalized_affinities = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        exceptions = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        states = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        comments = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    def parse_entry(entry):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        receptor, res, attr, measure, op, value, unit = entry123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if not attr == 'valid':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            return123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if not measure in ['Kd', 'Ki', 'ic50']:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            return123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if not op in ['=','~']:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            return123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        resnames, chain, resnum = res.split(':')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        resnames = resnames.split(' ')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        try:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            value = float(value)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if unit.lower() == 'fm':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                log_affinity = np.log(value) - np.log(10.0**15)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            elif unit.lower() == 'pm':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                log_affinity = np.log(value) - np.log(10.0**12)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            elif unit.lower() == 'nm':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                log_affinity = np.log(value) - np.log(10.0**9)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            elif unit.lower() == 'um':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                log_affinity = np.log(value) - np.log(10.0**6)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            elif unit.lower() == 'mm':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                log_affinity = np.log(value) - np.log(10.0**3)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            elif unit.lower() == 'm':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                log_affinity = np.log(value)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                raise Exception("unexpected unit {}".format(ligand))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            state = 1123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            comment = 'success'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        except Exception as e:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            #PDB_moad.exceptions.append(e)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            log_affinity = 0123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            state = 0123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            comment = str(e)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF       123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        for resname in resnames:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            PDB_moad.pdb_names.append(receptor.upper())123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            PDB_moad.ligand_names.append(resname.upper())123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            PDB_moad.log_affinities.append(log_affinity)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            PDB_moad.states.append(state)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            PDB_moad.comments.append(comment)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            PDB_moad.num_records +=1123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if state ==0:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                PDB_moad.num_exception +=1123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                PDB_moad.exceptions.append(e)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    with open(binding_moad_index) as fin:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        while(not fin.readline() == '"========================="\n'):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            continue123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        csv_reader = csv.reader(fin)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        receptor = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        for row in csv_reader:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if len(row) == 2:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                # smile string and rest123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                pass123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            elif not row[0]== '':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                # first columns like '2.6.1.62'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                pass123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            elif not row[2] == '':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                # get receptor123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                receptor = row[2]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                try:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                    parse_entry([receptor.upper()] + row[3:9])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                except Exception as e:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                    PDB_moad.num_exception +=1123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                    PDB_moad.exceptions.append(e)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                PDB_moad.num_records +=1123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    max_log_affinity = np.log(10.**0)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    min_log_affinity = np.log(10.**-18)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    PDB_moad.normalized_affinities = (PDB_moad.log_affinities - min_log_affinity)\123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    /(max_log_affinity - min_log_affinity)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    print "parsing finished. num records: {:<8d} num exceptions: {:<8d}"\123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    .format(PDB_moad.num_records, PDB_moad.num_exception)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    return PDB_moad123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef read_PDB_bind(pdb_bind_index = "/home/maksym/PyCharmProjects/datasets/pdbbind/INDEX_general_PL.2016"):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    class PDB_bind:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        num_records = 0123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        num_exceptions = 0123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        cant_split_lines = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        cant_split_affinity_and_moilarity = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        pdb_names = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        ligand_names = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        binding_affinities = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        log_affinities = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        normalized_affinities = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        exceptions = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        states = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        comments = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    with open(pdb_bind_index) as f:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        [f.readline() for _ in range(6)]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        file_text = f.readlines()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for line in file_text:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        pdb_name = re.split("[\s]+", line)[0]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        ligand_name = re.split("[\s]+", line)[6]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        try:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            # sanity check123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if re.compile(".*incomplete ligand.*").match(line):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                raise Exception('missing atoms in ligand')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if re.compile(".*covalent complex.*").match(line):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                raise Exception('forms covalent complex')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if re.compile(".*Nonstandard assay.*").match(line):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                raise Exception('not standard assay')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if not re.compile("^[a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9]$").match(pdb_name):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                raise Exception('PDB name in the record is impossible')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if not re.compile("\([a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9]\)").match(ligand_name):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                if not re.compile("\([a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9]-[a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9]\)").match(ligand_name):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                    raise Exception('ligand name is impossible')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            affinity_record = re.split("[\s]+", line)[3]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            # split the lines of the PDB bind file record123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            molar_affinity_record = re.sub(re.compile('(IC50=|Ki=|Kd=|IC50~|Ki~|Kd~)'), "", affinity_record)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            affinity_number_and_molarity = re.split(re.compile("([0-9]+\.[0-9]+|[0-9]+)"), molar_affinity_record)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if len(affinity_number_and_molarity) != 3:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                raise Exception('can not split record'), len(affinity_number_and_molarity)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            affinity_number = affinity_number_and_molarity[1]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if not re.compile("[0-9]").match(affinity_number):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                raise Exception('can not split record')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            molarity = affinity_number_and_molarity[2]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if not re.compile("(fM|pM|nM|uM|mM)").match(molarity):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                raise Exception('can not split record')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            # convert affinities into normalized affinities123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            # fm = -15; pm = -12, nm = -9; uM = -6; mM = -3;123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if re.compile("fm|fM|Fm").match(molarity):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                log_affinity = np.log(float(affinity_number)) - np.log(10.0 ** 15)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            elif re.compile("pm|Pm|pM").match(molarity):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                log_affinity = np.log(float(affinity_number)) - np.log(10.0 ** 12)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            elif re.compile("nm|Nm|nM").match(molarity):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                log_affinity = np.log(float(affinity_number)) - np.log(10.0 ** 9)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            elif re.compile("um|uM|Um"):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                log_affinity = np.log(float(affinity_number)) - np.log(10.0 ** 6)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            elif re.compile("mM|Mm|mm"):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                log_affinity = np.log(float(affinity_number)) - np.log(10.0 ** 3)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            state = 1123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            comment = 'success'    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        except Exception as e:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            PDB_bind.num_exceptions += 1123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            PDB_bind.exceptions.append(e)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            state = 0123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            comment = str(e)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            log_affinity = 0123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        PDB_bind.pdb_names.append(pdb_name)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        PDB_bind.ligand_names.append(ligand_name.strip("(").strip(")"))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        PDB_bind.log_affinities.append(log_affinity)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        PDB_bind.states.append(state)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        PDB_bind.comments.append(comment)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        PDB_bind.num_records += 1123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    max_log_affinity = np.log(10.**0)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    min_log_affinity = np.log(10.**-18)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    PDB_bind.normalized_affinities = (PDB_bind.log_affinities - min_log_affinity) / (max_log_affinity - min_log_affinity)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    print "parsing finished. num records:",PDB_bind.num_records,"num exceptions:",PDB_bind.num_exceptions123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    return PDB_bind123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef read_binding_db(binding_db_index):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    class binding_db:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        num_records = 0123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        num_exceptions = 0123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        cant_split_lines = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        cant_split_affinity_and_moilarity = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        pdb_names = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        ligand_names = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        binding_affinities = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        log_affinities = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        normalized_affinities = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        exceptions = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        states = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        comments = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    with open(binding_db_index) as fin:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        reader = csv.reader(fin, delimiter='\t')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        head = reader.next()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        # select the important columns123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        #     Ki(nM) 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        #     IC50(nM) 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        #     Kd(nM)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        #     pH123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        #     Temp (C)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        #     Ligand HET ID123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        #     PDB ID(s) for Ligand-Target Complex123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        collections = map(lambda row:[row[8],row[9],row[10],row[14],123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                    row[15],row[26],row[27]],reader)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        # remove record if the ligand or receptor ID missing123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        valid = filter(lambda row: 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                            not(row[-1]=='' or row[-2]==''), collections)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        # remove ligand-receptor record if it appears more than once123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        pairs = map(lambda row:(row[-2],row[-1]),valid)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        counter = Counter(pairs)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        unique_pair = [k for k,v in counter.items() if v==1]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        unique_entry = filter(lambda row: 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                                (row[-2],row[-1]) in unique_pair, valid)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        # Every record only have one PDB ID123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        single_pairs = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        for entry in unique_entry:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            for pdb in entry[-1].split(','):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                single_pairs.append(entry[:-1]+[pdb])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        # remove records which have more than one kind of measure value123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        better = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        for entry in single_pairs:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            # only 25 entry have more than one kind of measure123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            c = 0123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            pos = 0123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            for i in range(3):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                if not entry[i] == '':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                    c +=1123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                    pos = i123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            if c==1:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                better.append([entry[pos]]+entry[3:])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        # remove the record if its affinity value not precise123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        temp = filter(lambda x:x[0][0] not in ['<', '>'], better)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        records = map(lambda x:[float(x[0])]+x[1:], temp)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        for affinity, ph, temp, lig, rec in records:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            binding_db.pdb_names.append(rec)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            binding_db.ligand_names.append(lig)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            binding_db.log_affinities.append(np.log(float(affinity)) - np.log(10.0 ** 9))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            binding_db.states.append(1)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            binding_db.comments.append('success')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            binding_db.num_records += 1123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        max_log_affinity = np.log(10.**0)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        min_log_affinity = np.log(10.**-18)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        binding_db.normalized_affinities = (binding_db.log_affinities - min_log_affinity) / (max_log_affinity - min_log_affinity)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        print "parsing finished. num records:",binding_db.num_records,"num exceptions:",binding_db.num_exceptions123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        return binding_db123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFparse_bind_func = {123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    'pdbbind':read_PDB_bind,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    'bindmoad':read_binding_moad,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    'bindingdb':read_binding_db123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF}123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFif __name__ == '__main__':123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    PDB_bind = read_PDB_bind()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for i in range(len(PDB_bind.pdb_names)):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        print PDB_bind.pdb_names[i],PDB_bind.ligand_names[i],PDB_bind.normalized_affinities[i]