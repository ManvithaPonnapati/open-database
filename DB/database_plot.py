import matplotlib.pyplot as plt123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport matplotlib123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport numpy as np123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport pandas as pd 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport os 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport sys123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfrom collections import Counter123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfrom scipy import stats123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport config123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfrom database_action import db123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef multi_bar(xs,ys,title,xlabel,ylabel,filename,save=False,width=0.8,legend=None, alpha=0.5, cm = plt.get_cmap('Vega20'), cm_indice=None):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    """123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    draw multiple bar in one plot123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    """123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    fig, ax = plt.subplots()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for i in range(len(xs)):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if legend:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            ax.bar(xs[i],ys[i],width=width, alpha=alpha, label = legend[i],color=cm([cm_indice[i]]))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            ax.bar(xs[i],ys[i],width=width, alpha=alpha,color=cm([cm_indice[i]]))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ax.set_title(title)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ax.set_xlabel(xlabel)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ax.set_ylabel(ylabel)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if not legend==None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        ax.legend(bbox_to_anchor=(1.05,1),loc=2, borderaxespad=0.)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if save:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        fig.savefig(filename, bbox_inches='tight')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        print filename, " saved."123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef multi_plot(xs,ys,title,xlabel,ylabel,filename,save=False,width=0.8,legend=None, alpha=0.5, cm = plt.get_cmap('Vega20'), cm_indice=None):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    """123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    draw multiple curve in one plot123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    """123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    print len(xs)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    fig, ax = plt.subplots()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for i in range(len(xs)):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        order  = np.flipud(np.argsort(xs[i]))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        x = xs[i][order]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        y = ys[i][order]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if legend:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            ax.plot(x,y, label = legend[i],color=cm(cm_indice[i]))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF             ax.plot(x,y,color=cm(cm_indice[i]))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ax.set_title(title)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ax.set_xlabel(xlabel)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ax.set_ylabel(ylabel)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if not legend is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        # move legend out of the plot123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        ax.legend(bbox_to_anchor=(1.05,1),loc=2, borderaxespad=0.)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if save:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        # save image123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        fig.savefig(filename, bbox_inches='tight')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        print filename, " saved."123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef multi_errbar(xs,ys, yerrs,title,xlabel,ylabel,filename,save=False,width=0.8,legend=None, alpha=0.5, cm = plt.get_cmap('Vega20'), cm_indice=None):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    """123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    draw multiple bar in one plot123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    """123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    fig, ax = plt.subplots()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for i in range(len(xs)):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if legend:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            ax.errorbar(xs[i],ys[i],yerr=yerrs[i], alpha=alpha, label = legend[i])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        else:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            ax.errorbar(xs[i],ys[i],yerr=yerrs[i], alpha=alpha)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ax.set_title(title)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ax.set_xlabel(xlabel)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ax.set_ylabel(ylabel)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if not legend==None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        ax.legend(bbox_to_anchor=(1.05,1),loc=2, borderaxespad=0.)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if save:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        fig.savefig(filename, bbox_inches='tight')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        print filename, " saved."123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef split_ligand(sns=None):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    Draw the plot for splited ligand123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    If sns is None draw multiple plot for all the table found with type 'split_ligand'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    Else draw the table by input table_id:sns123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    '''123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if sns is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        sns = db.get_idx_by_type('split_ligand')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    elif type(sns).__name__ in ['int','str','unicode']:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        sns = [sns]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    xs = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ys = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    legend = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    cm_indice = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for idx,sn in enumerate(sns):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_name, table_param, df = db.get_success_data(sn, dataframe=True)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        val = df['heavy_atom']123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        val_c = Counter(val)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        fc = np.asarray(val_c.items())123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        xs.append(fc[:,0])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        ys.append(fc[:,1])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        legend.append(table_name)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        cm_indice.append(idx*2)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    multi_bar(xs,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              ys,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              title="ligands havey atom",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              xlabel="heavy atom num",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              ylabel="count",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              filename='None',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              width=0.4,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              legend=legend,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              save=False,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              cm_indice=cm_indice)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                  123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef split_receptor(sns=None):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if sns is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        sns = db.get_idx_by_type('split_receptor')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    elif type(sns).__name__ in ['int', 'str','unicode']:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        sns = [sns]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    xs = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ys = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    legend = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    cm_indice = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for idx, sn in enumerate(sns):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_name, table_param, df = db.get_success_data(sn, dataframe=True)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        if 'experiment' in df.columns:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            df = df[df['experiment']=='X-RAY DIFFRACTION']123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            res = df[['receptor','resolution']]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            res = res.drop_duplicates()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            val_c = Counter((100*res['resolution']).apply(int)/100)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            fc = np.asarray(val_c.items())123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            xs.append(fc[:,0])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            ys.append(fc[:,1])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            legend.append(table_name)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            cm_indice.append(idx*2)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    multi_bar(xs,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              ys,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              title="resolution",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              xlabel="resolution",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              ylabel="count",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              filename="None",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              width=0.01,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              legend=legend,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              save=False,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              cm_indice=cm_indice)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef rmsd(sns=None):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if sns is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        sns = db.get_idx_by_type('rmsd')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    elif type(sns).__name__ in ['int', 'str','unicode']:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        sns = [sns]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    xs = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ys = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    legend = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    cm_indice = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    xsc = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ysc =[]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for idx, sn in enumerate(sns):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_name, table_param, df = db.get_success_data(sn, dataframe=True)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        res = df[['position','rmsd']]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        x = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        y = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        val_c = Counter(res['rmsd'].apply(int))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        fc = np.asarray(val_c.items())123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        xsc.append(fc[:,0])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        ysc.append(fc[:,1])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        for name, group in res.groupby('position'):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            x.append(int(name))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            y.append(np.mean(group['rmsd']))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        xs.append(np.asarray(x))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        ys.append(np.asarray(y))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        legend.append(table_name)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        cm_indice.append(idx*2)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    multi_plot(xs,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              ys,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              title="rmsd",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              xlabel="position",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              ylabel="mean",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              filename='None',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              width=0.1,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              legend=legend,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              save=False,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              cm_indice=cm_indice)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    multi_bar(xsc,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               ysc,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               title="rmsd",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               xlabel="rmsd",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               ylabel="count",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               filename="None",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               width=1,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               legend=legend,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               save=False,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               cm_indice=cm_indice)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF                  123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef overlap(sns=None):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if sns is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        sns = db.get_idx_by_type('overlap')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    elif type(sns).__name__ in ['int', 'str','unicode']:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        sns = [sns]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    xs = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ys = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    legend = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    cm_indice = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    xsc = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ysc =[]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for idx, sn in enumerate(sns):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_name, table_param, df = db.get_success_data(sn, dataframe=True)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        #print df.columns123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for idx, sn in enumerate(sns):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_name, table_param, df = db.get_success_data(sn, dataframe=True)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        res = df[['position','overlap_ratio']]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        x = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        y = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        val_c = Counter((100*res['overlap_ratio']).apply(int)/100.)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        fc = np.asarray(val_c.items())123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        xsc.append(fc[:,0])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        ysc.append(fc[:,1])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        for name, group in res.groupby('position'):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            x.append(int(name))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            y.append(np.mean(group['overlap_ratio']))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        xs.append(np.asarray(x))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        ys.append(np.asarray(y))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        legend.append(table_name)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        cm_indice.append(idx*2)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    multi_plot(xs,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              ys,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              title="overlap",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              xlabel="position",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              ylabel="mean",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              filename='None',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              width=0.01,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              legend=legend,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              save=False,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              cm_indice=cm_indice)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    multi_bar(xsc,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               ysc,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               title="overlap",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               xlabel="overlap",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               ylabel="count",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               filename="None",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               width=0.05,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               legend=legend,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               save=False,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               cm_indice=cm_indice)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef native_contact(sns=None):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    if sns is None:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        sns = db.get_idx_by_type('native_contact')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    elif type(sns).__name__ in ['int', 'str','unicode']:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        sns = [sns]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    xs = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ys = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    legend = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    cm_indice = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    xsc = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    ysc =[]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for idx, sn in enumerate(sns):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_name, table_param, df = db.get_success_data(sn, dataframe=True)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        #print df.columns123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    for idx, sn in enumerate(sns):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        table_name, table_param, df = db.get_success_data(sn, dataframe=True)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        res = df[['position','native_contact']]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        x = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        y = []123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        pos = res[res['native_contact']>0]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        val_c = Counter((100*pos['native_contact']).apply(int)/100.)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        fc = np.asarray(val_c.items())123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        xsc.append(fc[:,0])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        ysc.append(fc[:,1])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        for name, group in res.groupby('position'):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            x.append(int(name))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            y.append(np.mean(group['native_contact']))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF            123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        xs.append(np.asarray(x))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        ys.append(np.asarray(y))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        legend.append(table_name)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF        cm_indice.append(idx*2)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    multi_plot(xs,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              ys,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              title="native contact",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              xlabel="position",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              ylabel="mean",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              filename='None',123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              width=0.1,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              legend=legend,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              save=False,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF              cm_indice=cm_indice)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    multi_bar(xsc,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               ysc,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               title="native contact",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               xlabel="native contact",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               ylabel="count",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               filename="None",123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               width=0.01,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               legend=legend,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               save=False,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF               cm_indice=cm_indice)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF    