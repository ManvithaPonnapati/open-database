import joblib123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport os, time123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport pickle123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport numpy as np 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFimport pickle123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfrom utils import DiskDataset123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF"""123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF1: H123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF2: C123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF3: N123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF4: O123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF5: Halogens123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF6: P123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF7: S, Se123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF8: Alkali/Alkali-earth metals123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF9: Metals123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF"""123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFatom_dictionary = {123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	1:1, 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	6:2, 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	7:3, 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	8:4, 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	9:5, 17:5, 35:5, 53:5, 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	15:6, 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	16:7, 34:7,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	11:8, 19:8, 37:8, 55:8, 12:8, 20:8, 38:8, 56:8,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	25:9, 26:9, 27:9, 28:9, 29:9, 30:9, 48:9, 80:9123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF}123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdef process_data(coords, nbr_idx, elements):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	num_atoms = len(nbr_idx)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	# truncates off zero padding at the end and maps atomic numbers to atom types123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	coords = coords[:num_atoms, :]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	elements = np.array([atom_dictionary[elements[i]] for i in range(num_atoms)], dtype=np.int32)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	# pad the neighbor indices with zeros if not enough neighbors123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	elements = np.append(elements, 0)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	for i in range(num_atoms):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		if len(nbr_idx[i]) < 12:123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF			nbr_idx[i].extend(np.ones([12-len(nbr_idx[i])], dtype=np.int32) * num_atoms)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	nbr_idx = np.array([nbr_idx[i] for i in range(num_atoms)], dtype=np.int32)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	# creates neighboring atom type matrix - 0 = nonexistent atom123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	nbr_atoms = np.take(elements, nbr_idx)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	np.place(nbr_idx, nbr_idx >= num_atoms, 0)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	elements = elements[:-1]123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	return (coords.astype(np.float32), nbr_idx.astype(np.int32), 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	       elements.astype(np.int32), nbr_atoms.astype(np.int32))123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFbase_dir = os.getcwd()123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFdata_dir = os.path.join(base_dir, "datasets")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFtrain_dir = os.path.join(data_dir, "random_train")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFtest_dir = os.path.join(data_dir, "random_test")123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFtrain_dataset = DiskDataset(train_dir)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFtest_dataset = DiskDataset(test_dir)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFprint 'Loading the training dataset...'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFX = train_dataset.X123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFy = train_dataset.y123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFids = train_dataset.ids123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFnum_examples = len(ids)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFos.mkdir('./pdbbind_refined_train')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFos.chdir('./pdbbind_refined_train')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfor i in range(num_examples):123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	ligand_coords, ligand_nbr_idx, ligand_elements, ligand_nbr_atoms = process_data(X[i][0], X[i][1], X[i][2])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	receptor_coords, receptor_nbr_idx, receptor_elements, receptor_nbr_atoms = process_data(X[i][3], X[i][4], X[i][5])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	complex_coords, complex_nbr_idx, complex_elements, complex_nbr_atoms = process_data(X[i][6], X[i][7], X[i][8])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	label = y[i][0].astype(np.float32)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	os.makedirs(ids[i])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	os.chdir(ids[i])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	path = os.path.join(os.getcwd(), 'data')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	np.savez(path, label=label,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		ligand_coords=ligand_coords, 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		ligand_nbr_idx=ligand_nbr_idx, 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		ligand_nbr_atoms=ligand_nbr_atoms,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		ligand_elements=ligand_elements,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		receptor_coords=receptor_coords, 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		receptor_nbr_idx=receptor_nbr_idx,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		receptor_nbr_atoms=receptor_nbr_atoms, 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		receptor_elements=receptor_elements,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		complex_coords=complex_coords, 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		complex_nbr_idx=complex_nbr_idx, 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		complex_nbr_atoms=complex_nbr_atoms,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		complex_elements=complex_elements)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	os.chdir('..')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	print 'Progress %(example_num)d of %(total)d' % {'example_num': i, 'total': num_examples}123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFos.chdir('..')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFprint 'Loading the testing dataset...'123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFX = test_dataset.X123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFy = test_dataset.y123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFids = test_dataset.ids123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFnum_examples = len(ids)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFos.mkdir('./pdbbind_refined_test')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFos.chdir('./pdbbind_refined_test')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFfor i in range(num_examples): 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	ligand_coords, ligand_nbr_idx, ligand_elements, ligand_nbr_atoms = process_data(X[i][0], X[i][1], X[i][2])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	receptor_coords, receptor_nbr_idx, receptor_elements, receptor_nbr_atoms = process_data(X[i][3], X[i][4], X[i][5])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	complex_coords, complex_nbr_idx, complex_elements, complex_nbr_atoms = process_data(X[i][6], X[i][7], X[i][8])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	label = y[i][0].astype(np.float32)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	os.makedirs(ids[i])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	os.chdir(ids[i])123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	path = os.path.join(os.getcwd(), 'data')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	np.savez(path, label=label,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		ligand_coords=ligand_coords, 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		ligand_nbr_idx=ligand_nbr_idx, 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		ligand_nbr_atoms=ligand_nbr_atoms,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		ligand_elements=ligand_elements,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		receptor_coords=receptor_coords, 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		receptor_nbr_idx=receptor_nbr_idx,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		receptor_nbr_atoms=receptor_nbr_atoms, 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		receptor_elements=receptor_elements,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		complex_coords=complex_coords, 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		complex_nbr_idx=complex_nbr_idx, 123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		complex_nbr_atoms=complex_nbr_atoms,123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF		complex_elements=complex_elements)123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	os.chdir('..')123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF	print 'Progress %(example_num)d of %(total)d' % {'example_num': i, 'total': num_examples}123343DJNBFHJBJNKFJNBHDRFBNJKDJUNF123343DJNBFHJBJNKFJNBHDRFBNJKDJUNFprint "All done"